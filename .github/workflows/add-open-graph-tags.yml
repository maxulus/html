name: Add Open Graph Tags to HTML Files

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:  # Trigger for manual runs

jobs:
  add-open-graph-tags:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install dependencies
        run: |
          npm install

      - name: Run script to add Open Graph tags
        run: |
          node -e "
            const fs = require('fs');
            const path = require('path');
            const directory = './';  // Adjust this to point to the correct folder

            // Regular expression to find .jpg image links in meta tags
            const metaTagPattern = /<meta[^>]*content=['\"]([^'\"]+\.(jpg|jpeg|png))['\"][^>]*>/i;

            
            let changesMade = false;  // Flag to indicate whether changes were made
            
            if (fs.existsSync(directory)) {
              const files = fs.readdirSync(directory);
              files.forEach(file => {
                const filePath = path.join(directory, file);
                if (file.endsWith('.html') && file !== 'index.html') {
                  console.log('Processing file: ' + filePath);
                  
                  // Read the HTML file
                  let content = fs.readFileSync(filePath, 'utf8');
                  
                  // Limit processing to first 25 lines
                  const first25Lines = content.split('\\n').slice(0, 25).join('\\n');
          
                  // Find all meta tags in the first 25 lines
                  const metaTags = first25Lines.match(/<meta[^>]*>/g);
                  if (metaTags) {
                    console.log('Found meta tags in first 25 lines:', metaTags);
                    let imageLink = null;
          
                    // Check each meta tag for image links
                    metaTags.forEach(tag => {
                      const match = tag.match(metaTagPattern);
                      if (match && match[1]) {
                        imageLink = match[1];
                        console.log('Found image link:', imageLink);
                      }
                    });
          
                    if (imageLink) {
                      const ogTag = \`<meta property="og:image" content="\${imageLink}">\`;
                      if (!content.includes('og:image')) {
                        content = content.replace(/<\\/head>/, ogTag + '<\\/head>');
                        fs.writeFileSync(filePath, content, 'utf8');
                        console.log('Added Open Graph tag to: ' + filePath);
                        changesMade = true;
                      } else {
                        console.log('Open Graph tag already exists in: ' + filePath);
                      }
                    } else {
                      console.log('No .jpg image found in meta tags of ' + filePath);
                    }
                  } else {
                    console.log('No meta tags found in the first 25 lines of: ' + filePath);
                  }
                }
              });
            } else {
              console.error('Directory not found: ' + directory);
              process.exit(1);
            }
            
            // Final log indicating whether changes were made
            if (changesMade) {
              console.log('Open Graph tags were successfully added.');
            } else {
              console.log('No changes were made. No Open Graph tags were added.');
            }
          "
