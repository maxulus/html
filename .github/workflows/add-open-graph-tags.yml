const fs = require('fs');
const path = require('path');
const directory = '.';

const metaTagPattern = /<meta[^>]*content=['\"]([^'\"]+\.jpg)['\"][^>]*>/i;

let changesMade = false;

if (fs.existsSync(directory)) {
  const files = fs.readdirSync(directory);
  files.forEach(file => {
    const filePath = path.join(directory, file);
    if (file.endsWith('.html') && file !== 'index.html') {
      try {
        const content = fs.readFileSync(filePath, 'utf8');
        const firstLines = content.split('\n').slice(0, 20).join('\n');

        const metaTags = firstLines.match(/<meta[^>]*>/g);
        if (metaTags) {
          let imageLink = null;

          metaTags.forEach(tag => {
            const match = tag.match(metaTagPattern);
            if (match && match[1]) {
              imageLink = match[1];
            }
          });

          if (imageLink) {
            const ogTag = `<meta property="og:image" content="${imageLink}">`;
            if (!content.includes('og:image')) {
              const updatedContent = content.replace(/<\/head>/, ogTag + '</head>');
              fs.writeFileSync(filePath, updatedContent, 'utf8');
              console.log(`Added Open Graph tag to: ${filePath}`);
              changesMade = true;
            } else {
              console.log(`Open Graph tag already exists in: ${filePath}`);
            }
          } else {
            console.log(`No .jpg image found in meta tags of ${filePath}`);
          }
        } else {
          console.log(`No meta tags found in ${filePath}`);
        }
      } catch (error) {
        console.error(`Error processing file ${filePath}: ${error.message}`);
      }
    }
  });

  if (changesMade) {
    console.log('Open Graph tags were successfully added.');
  } else {
    console.log('No changes were made. No Open Graph tags were added.');
  }
} else {
  console.error(`Directory not found: ${directory}`);
  process.exit(1);
}
